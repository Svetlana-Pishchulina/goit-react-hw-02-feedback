{"version":3,"sources":["FeedbackOptions/FeedbackOptions.module.css","Statistics/Statistics.module.css","Section/Section.module.css","Notification/Notification.module.css","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","Section/Section.js","Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","stateKeysArr","className","styles","list","map","feedback","listItem","button","onClick","Statistics","allFeedbacksObj","total","positivePercentage","Section","title","children","sectionTitle","Notification","message","notification","App","state","good","neutral","bad","setFeedbackToState","setState","prevState","Object","keys","this","feedbacksCount","reduce","acc","Math","round","options","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,SAAW,kCAAkC,OAAS,kC,gBCA7GD,EAAOC,QAAU,CAAC,SAAW,+B,qBCA7BD,EAAOC,QAAU,CAAC,aAAe,gC,gBCAjCD,EAAOC,QAAU,CAAC,aAAe,qC,+LCwBlBC,EAtBS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAC1C,OACE,oBAAIC,UAAWC,IAAOC,KAAtB,SACGH,EAAaI,KAAI,SAACC,GAAD,OAChB,oBAAmBJ,UAAWC,IAAOI,SAArC,SACE,wBACEL,UAAWC,IAAOK,OAClBC,QAAS,kBAAMT,EAAgBM,IAFjC,SAIGA,KALIA,S,gBCyBFI,EA7BI,SAAC,GAKb,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAZ,EACI,EADJA,aAEA,OACE,+BACGA,EAAaI,KAAI,SAACC,GAAD,OAChB,oBAAmBJ,UAAWC,IAAOI,SAArC,SACE,iCACGD,EADH,IACcK,EAAgBL,OAFvBA,MAMX,qBAAIJ,UAAWC,IAAOI,SAAtB,mBAAuCK,KACvC,qBAAIV,UAAWC,IAAOI,SAAtB,gCACsBM,EADtB,W,gBCHSC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAId,UAAWC,IAAOc,aAAtB,SAAqCF,IACpCC,M,iBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGjB,UAAWC,IAAOiB,aAArB,SAAoCD,KCkD9BE,E,4MA9CbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPC,mBAAqB,SAACpB,GACpB,EAAKqB,UAAS,SAACC,GACb,OAAO,eAAGtB,EAAWsB,EAAUtB,GAAY,O,4CAI/C,WAAU,IAAD,OACDL,EAAe4B,OAAOC,KAAKC,KAAKT,OAChCU,EAAiB/B,EAAagC,QAClC,SAACC,EAAK5B,GAAN,OAAmB4B,EAAM,EAAKZ,MAAMhB,KACpC,GAEIO,EAAqBsB,KAAKC,MAC7BL,KAAKT,MAAMC,KAAOS,EAAkB,KAGvC,OACE,qCACE,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEsB,QAASN,KAAKT,MACdtB,gBAAiB+B,KAAKL,mBACtBzB,aAAcA,MAIlB,eAAC,EAAD,CAASc,MAAM,aAAf,WACIiB,GAAkB,cAAC,EAAD,CAAcb,QAAQ,wBACvCa,GACD,cAAC,EAAD,CACErB,gBAAiBoB,KAAKT,MACtBV,MAAOoB,EACPnB,mBAAoBA,EACpBZ,aAAcA,c,GAvCVqC,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32adfe25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__309V1\",\"listItem\":\"FeedbackOptions_listItem__1r2tG\",\"button\":\"FeedbackOptions_button__2QTd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Statistics_listItem__33BQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__1ldUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__14qVx\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, stateKeysArr }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {stateKeysArr.map((feedback) => (\r\n        <li key={feedback} className={styles.listItem}>\r\n          <button\r\n            className={styles.button}\r\n            onClick={() => onLeaveFeedback(feedback)}\r\n          >\r\n            {feedback}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  stateKeysArr: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({\r\n  allFeedbacksObj,\r\n  total,\r\n  positivePercentage,\r\n  stateKeysArr,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      {stateKeysArr.map((feedback) => (\r\n        <li key={feedback} className={styles.listItem}>\r\n          <span>\r\n            {feedback}:{allFeedbacksObj[feedback]}\r\n          </span>\r\n        </li>\r\n      ))}\r\n      <li className={styles.listItem}>Total:{total}</li>\r\n      <li className={styles.listItem}>\r\n        Positive feedback: {positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  allFeedbacksObj: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  stateKeysArr: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className={styles.sectionTitle}>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.notification}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./Section\";\n// import styles from \"./App.module.css\";\nimport Notification from \"./Notification\";\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  setFeedbackToState = (feedback) => {\n    this.setState((prevState) => {\n      return { [feedback]: prevState[feedback] + 1 };\n    });\n  };\n\n  render() {\n    const stateKeysArr = Object.keys(this.state);\n    const feedbacksCount = stateKeysArr.reduce(\n      (acc, feedback) => acc + this.state[feedback],\n      0\n    );\n    const positivePercentage = Math.round(\n      (this.state.good / feedbacksCount) * 100\n    );\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.setFeedbackToState}\n            stateKeysArr={stateKeysArr}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!feedbacksCount && <Notification message=\"No feedback given\" />}\n          {!!feedbacksCount && (\n            <Statistics\n              allFeedbacksObj={this.state}\n              total={feedbacksCount}\n              positivePercentage={positivePercentage}\n              stateKeysArr={stateKeysArr}\n            ></Statistics>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}